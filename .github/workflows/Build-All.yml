name: 🛠️ 批量构建 KernelSU Next SUSFS 内核

on:
  # schedule:
  #   - cron: '0 15 * * *'
  workflow_dispatch:

env:
  KERNEL_WORKSPACE: ${{ github.workspace }}/kernel_workspace
  release: "true"  # 默认设置为 true，表示需要发布

jobs:
  parse-configs:
    name: "📖 解析配置文件"
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.parse.outputs.repos }}
      release_body: ${{ steps.generate_body.outputs.release_body }}
    steps:
      - name: "📚 检出代码"
        uses: actions/checkout@v3

      - name: "📝 解析 repos.*.json"
        id: parse
        shell: /usr/bin/bash -e {0}
        run: |
          echo "repos<<EOF" >> $GITHUB_OUTPUT
          jq -s '[.[][]]' repos*.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: "📝 生成 Release 描述"
        id: generate_body
        run: |
          body_file="./release_body.txt"
          echo -n "" > $body_file
          
          # 添加表头
          echo "| 设备名称 | 编译内核 | 配置文件 | Android 版本 |" >> $body_file
          echo "|----------|----------|----------|--------------|" >> $body_file

          # 遍历所有 repos.*.json 文件并生成表格内容
          for file in $(ls repos.*.json); do
            jq -r '.[] | "| \(.NAME) | \(.KERNEL_VERSION) | \(.FEIL) | \(.ANDROID_VERSION) |"' $file >> $body_file
          done

          # 将生成的 body 内容写入 $GITHUB_OUTPUT
          echo "release_body<<EOF" >> $GITHUB_OUTPUT
          cat $body_file >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  build-kernels:
    name: "🛠️ 构建 KernelSU Next SUSFS"
    runs-on: ubuntu-latest
    needs: parse-configs
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        repo: ${{ fromJSON(needs.parse-configs.outputs.repos) }}
    steps:
      - name: "🧳 释放构建空间"
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: "⚙️ 配置 Git"
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: "📦 安装依赖"
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3 git curl jq

      - name: "🛠️ 安装 repo 工具"
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: "🔄 初始化 repo 并同步"
        env:
          CPU: ${{ matrix.repo.CPU }}
          FEIL: ${{ matrix.repo.FEIL }}
        run: |
          mkdir -p $KERNEL_WORKSPACE && cd $KERNEL_WORKSPACE
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${CPU} -m ${FEIL}.xml --depth=1
          repo sync
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "没有受保护的导出！"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "没有受保护的导出！"
          sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
          sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion

      - name: "🛠️ 设置 KernelSU Next"
        id: setup-ksu
        run: |
          cd $KERNEL_WORKSPACE/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          cd KernelSU-Next
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_OUTPUT
          sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: "🛠️ 设置 susfs"
        env:
          ANDROID_VERSION: ${{ matrix.repo.ANDROID_VERSION }}
          KERNEL_VERSION: ${{ matrix.repo.KERNEL_VERSION }}
        run: |
          cd $KERNEL_WORKSPACE
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${ANDROID_VERSION}-${KERNEL_VERSION}
          git clone https://github.com/TheWildJames/kernel_patches.git
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          cd ./KernelSU-Next
          patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch || true
          cp ../../kernel_patches/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch
          git add -A && git commit -a -m "构建内核"
          cd ..
          cd ./msm-kernel && git add -A && git commit -a -m "构建内核"
          cd ..

          cp ../kernel_patches/apk_sign.c_fix.patch ./
          patch -p1 -F 3 < apk_sign.c_fix.patch

          cp ../kernel_patches/core_hook.c_fix.patch ./
          patch -p1 --fuzz=3 < ./core_hook.c_fix.patch

          cp ../kernel_patches/selinux.c_fix.patch ./
          patch -p1 -F 3 < selinux.c_fix.patch

      - name: "🛠️ 构建内核"
        uses: nick-fields/retry@v3
        env:
          CPUD: ${{ matrix.repo.CPUD }}
        with:
          timeout_minutes: 240
          max_attempts: 3
          command: |
            set -e  # 启用错误检查
            cd $KERNEL_WORKSPACE
            ./kernel_platform/oplus/build/oplus_build_kernel.sh ${CPUD} gki || { echo "构建失败！"; exit 1; }

      - name: "🛠️ 创建 AnyKernel3"
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          cp $KERNEL_WORKSPACE/kernel_platform/out/msm-kernel-${{ matrix.repo.CPUD }}-gki/dist/Image ./AnyKernel3/

      - name: 📤 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_KernelSU_Next_${{ steps.setup-ksu.outputs.KSUVER }}_${{ matrix.repo.FEIL }}
          path: "./AnyKernel3/*"

      - name: "🧧 创建 GitHub Release"
        uses: softprops/action-gh-release@v2
        if: ${{ env.release == 'true' }}
        with:
          tag_name: "KernelSU-Next-SUSFS-${{ steps.setup-ksu.outputs.KSUVER }}"
          name: "KernelSU Next SUSFS 内核 v${{ steps.setup-ksu.outputs.KSUVER }}"
          body: ${{ needs.parse-configs.outputs.release_body }}
          draft: false
          prerelease: false
          files: "./AnyKernel3/*"