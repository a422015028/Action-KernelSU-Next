name: build_kimi

on:
  workflow_dispatch:

env:
  KERNEL_WORKSPACE: /home/runner/work/Action-KernelSU-Next/Action-KernelSU-Next/kernel_workspace

jobs:
  parse-configs:
    name: "_Parse Configs"
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.parse.outputs.repos }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: Parse repos.*.json
        id: parse
        shell: /usr/bin/bash -e {0}
        run: |
          echo "repos<<EOF" >> $GITHUB_OUTPUT
          jq -s '[.[][]]' repos*.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  build-kernels:
    name: "Build KernelSU Next SUSFS"
    runs-on: ubuntu-latest
    needs: parse-configs
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        repo: ${{ fromJSON(needs.parse-configs.outputs.repos) }}
    steps:
      - name: "Release Build Space"
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: "Configure Git"
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: "Install Dependencies"
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl

      - name: "Install repo tool"
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: "Initialize repo and sync"
        env:
          CPU: ${{ matrix.repo.CPU }}
          FEIL: ${{ matrix.repo.FEIL }}
        run: |
          mkdir -p $KERNEL_WORKSPACE && cd $KERNEL_WORKSPACE
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${CPU} -m ${FEIL}.xml --depth=1
          repo sync
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
          sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
          sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion

      - name: "Setup KernelSU Next"
        run: |
          cd $KERNEL_WORKSPACE/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          cd KernelSU-Next
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: "Setup susfs"
        env:
          ANDROID_VERSION: ${{ matrix.repo.ANDROID_VERSION }}
          KERNEL_VERSION: ${{ matrix.repo.KERNEL_VERSION }}
        run: |
          cd $KERNEL_WORKSPACE
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${ANDROID_VERSION}-${KERNEL_VERSION}
          git clone https://github.com/TheWildJames/kernel_patches.git
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          cd ./KernelSU-Next
          patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-${ANDROID_VERSION}-${KERNEL_VERSION}.patch || true
          cp ../../kernel_patches/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch
          git add -A && git commit -a -m "BUILD Kernel"
          cd ..
          cd ./msm-kernel && git add -A && git commit -a -m "BUILD Kernel"
          cd ..

          cp ../kernel_patches/apk_sign.c_fix.patch ./
          patch -p1 -F 3 < apk_sign.c_fix.patch

          cp ../kernel_patches/core_hook.c_fix.patch ./
          patch -p1 --fuzz=3 < ./core_hook.c_fix.patch

          cp ../kernel_patches/selinux.c_fix.patch ./
          patch -p1 -F 3 < selinux.c_fix.patch

      - name: "Build Kernel"
        env:
          CPUD: ${{ matrix.repo.CPUD }}
        run: |
          cd $KERNEL_WORKSPACE
          ./kernel_platform/oplus/build/oplus_build_kernel.sh ${CPUD} gki

      - name: "Create AnyKernel3"
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          cp $KERNEL_WORKSPACE/kernel_platform/out/msm-kernel-${{ matrix.repo.CPUD }}-gki/dist/Image ./AnyKernel3/

      - name: "Upload AnyKernel3"
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_KernelSU_Next_${{ github.env.KSUVER }}_${{ matrix.repo.FEIL }}
          path: ./AnyKernel3/*

      - name: "Upload Image"
        uses: actions/upload-artifact@v4
        with:
          name: Image_KernelSU_Next_${{ github.env.KSUVER }}_${{ matrix.repo.FEIL }}
          path: $KERNEL_WORKSPACE/kernel_platform/out/msm-kernel-${{ matrix.repo.CPUD }}-gki/dist/Image

